#!/bin/bash

# Format: "id:description:level:category:tags:check_cmd:install_cmd"
SYSTEM_PACKAGES=(
	# --- BASE ---
	"curl:cURL:base:System:base:command -v curl:pkg_install curl"
	"wget:Wget:base:System:base:command -v wget:pkg_install wget"
	"git:Git:base:Development:base:command -v git:pkg_install git"
	"ufw:Firewall UFW:base:System:base:command -v ufw:pkg_install ufw"

	# --- OFFICE ---
	"vlc:VLC Media Player:base:Apps:base:command -v vlc:pkg_install vlc"
	"gimp:GIMP Image Editor:base:Apps:base:command -v gimp:pkg_install gimp"

	# --- DEV-LIGHT ---
	"zsh:Z Shell:base:Shell:dev-light:command -v zsh:pkg_install zsh"
	"terminator:Terminator:base:Shell:dev-light:command -v terminator:pkg_install terminator"
	"gcc:GCC Compiler:base:Development:dev-light:command -v gcc:pkg_install gcc"
	"make:Make:base:Development:dev-light:command -v make:pkg_install make"
	"python3:Python 3:base:Development:dev-light:command -v python3:pkg_install python3"
	"python3-pip:Python pip:base:Development:dev-light:command -v pip3:pkg_install python3-pip"
	"valgrind:Valgrind:full:Development:dev-light:command -v valgrind:pkg_install valgrind"

	# --- NEOVIM ---
	"fzf:Fuzzy finder:base:Neovim:dev-light:command -v fzf:pkg_install fzf"
	"ripgrep:Ripgrep:base:Neovim:dev-light:command -v rg:pkg_install ripgrep"
	"fd-find:fd-find:base:Neovim:dev-light:command -v fdfind:pkg_install fd-find"
	"xclip:Xclip:base:Neovim:dev-light:command -v xclip:pkg_install xclip"
	"cmake:CMake:full:Development:dev-full:command -v cmake:pkg_install cmake"
	"clang:Clang Compiler:full:Development:dev-full:command -v clang:pkg_install clang"
	"neofetch:neofetch:full:Utilities:gui:command -v neofetch:pkg_install neofetch"
	"pipx:Pipx for Py-tools:full:Neovim:dev-full:command -v pipx:pkg_install pipx"

	# --- FULL DEV ---
	"gparted:GParted:full:Utilities:dev-full:command -v gparted:pkg_install gparted"
	"gnome-disk-utility:Disk Utility:full:Utilities:dev-full:dpkg -s gnome-disk-utility:pkg_install gnome-disk-utility"
	"htop:htop:full:Utilities:dev-full:command -v htop:pkg_install htop"
	"btop:btop:full:Utilities:dev-full:command -v btop:pkg_install btop"
	"tree:tree:full:Utilities:dev-full:command -v tree:pkg_install tree"
	"inxi:inxi:full:Utilities:gui:command -v inxi:pkg_install inxi"

	# --- GAMING OPT ---
	"steam:Steam:optional:Gaming:gaming:command -v steam:pkg_install steam"
	"lutris:Lutris:optional:Gaming:gaming:command -v lutris:pkg_install lutris"
	"mangohud:MangoHud Overlay:optional:Gaming:gaming:command -v mangohud:pkg_install mangohud"
)

SPECIAL_INSTALLS=(
	"fonts:MesloLGS Fonts:base:Theme:base:check_fonts:install_fonts"
	"icons:buuf_nestort Icons:base:Theme:base:check_icons:install_icons"
	"zsh_config:Zsh/OMZ Config:base:Shell:base:check_omz:install_zsh && install_zconfig"
	"ssh_git:SSH & Git Config:base:Development:base:check_ssh_key:setup_ssh_and_git"
	"nvim:Neovim AppImage:base:Neovim:dev-light:check_nvim:install_nvim"
	"node:Node.js (via NVM):full:Development:dev-full:check_nvm:install_node"
	"docker:Docker CE:full:Development:dev-full:check_docker:install_docker"
	"firefox:Firefox (Mozilla):full:Apps:gui:check_firefox_mozilla:install_firefox"
	"veracrypt:VeraCrypt:full:Apps:gui:check_veracrypt:install_veracrypt"
)

OPTIONAL_PACKAGES=(
	# --- OFFICE ---
	"libreoffice:LibreOffice Suite:optional:Office:office:command -v libreoffice:pkg_install libreoffice"

	# --- EMBEDDED ---
	"gcc-arm-none-eabi:ARM GCC:optional:Embedded:embedded:command -v arm-none-eabi-gcc:pkg_install gcc-arm-none-eabi"
	"avr-libc:AVR C library:optional:Embedded:embedded:dpkg -s avr-libc &>/dev/null:pkg_install avr-libc"
	"avrdude:AVR programmer:optional:Embedded:embedded:command -v avrdude:pkg_install avrdude"
	"nasm:NASM assembler:optional:Embedded:embedded:command -v nasm:pkg_install nasm"
	"screen:Screen:optional:Embedded:embedded:command -v screen:pkg_install screen"
)

declare -a CATEGORIES=(
	"System:System Base"
	"Utilities:Utilities"
	"Development:Development Tools"
	"Shell:Terminal & Shell"
	"Neovim:Neovim & Tools"
	"Apps:GUI Applications"
	"Theme:Themes & Fonts"
	"Gaming:Gaming"
	"Office:Office Suite"
	"Embedded:Embedded Dev"
)

check_fonts() { [[ -f "$HOME/.local/share/fonts/MesloLGS NF Regular.ttf" ]]; }
check_icons() { [[ -d "$HOME/.local/share/icons/buuf_nestort" ]]; }
check_omz() { [[ -d "$HOME/.oh-my-zsh" ]]; }
check_nvim() { [[ -x "$HOME/AppImage/nvim.appimage" ]]; }
check_ssh_key() { [[ -f "$HOME/.ssh/id_ed25519" ]]; }
check_firefox_mozilla() { apt-cache policy firefox 2>/dev/null | grep -q 'packages.mozilla.org'; }
check_docker() { dpkg -s docker-ce &>/dev/null; }
check_nvm() { [[ -d "$HOME/.nvm" ]]; }
check_veracrypt() { dpkg -s veracrypt &>/dev/null; }

